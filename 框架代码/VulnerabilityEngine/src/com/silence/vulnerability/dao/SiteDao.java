/**
 * 
 */
package com.silence.vulnerability.dao;

import java.sql.Timestamp;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

/**
 * @title SiteTaskDao.java
 * @author liyuanguo
 * @time 2016年10月17日 下午2:34:27
 * @description TODO
 * @version V1.0
 */
@Component
public class SiteDao {
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	/**
	 * 
	 * @author liyuanguo
	 * @time 2016年10月17日 下午2:47:28
	 * @description 扫描网站入库
	 * @param url
	 * @param rateTime
	 * @param type
	 * @param encodeUrl
	 * @return
	 */
	public int addSite(String url,int rateTime,int type,String encodeUrl){
		String sql="INSERT INTO tb_kst_task_site(url,rate_time,type,encode_url,update_time) VALUES(?,?,?,?,?)";
		try {
			jdbcTemplate.update(sql,new Object[]{url,rateTime,type,encodeUrl,new Timestamp(System.currentTimeMillis())});
			return 1;
		} catch (Exception e) {
			e.printStackTrace();
			return -1;
		}
	}
	
	/**
	 * 
	 * @author liyuanguo
	 * @time 2016年10月17日 下午3:01:36
	 * @description 通过urlMD5转换值检索url
	 * @param encodeUrl
	 * @return
	 */
	public List<Map<String,Object>> getSiteByEncodeUrl(String encodeUrl){
		String sql="select * from tb_kst_task_site where encode_url=?";
		return jdbcTemplate.queryForList(sql, new Object[]{encodeUrl});
	}
	
	/**
	 * 
	 * @author liyuanguo
	 * @time 2016年10月17日 下午3:13:53
	 * @description 替换任务
	 * @param id
	 * @param url
	 * @param rateTime
	 * @param type
	 * @return
	 */
	public int updateSite(long id,int rateTime,int type){
		String sql="update tb_kst_task_site set rate_time=?,type=?,update_time=? where id=?";
		try {
			jdbcTemplate.update(sql,new Object[]{rateTime,type,new Timestamp(System.currentTimeMillis()),id});
			return 2;
		} catch (Exception e) {
			e.printStackTrace();
			return -2;
		}
	}
	
}
