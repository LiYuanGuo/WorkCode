// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ServerMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace liyuanguo {
namespace qq {
namespace search {

namespace {

const ::google::protobuf::Descriptor* ServerMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerMessage_reflection_ = NULL;
struct ServerMessageOneofInstance {
  const ::com::liyuanguo::qq::search::ServerMessage_ReceiveContent* receive_content_;
  const ::com::liyuanguo::qq::search::ServerMessage_GetData* get_data_;
}* ServerMessage_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ServerMessage_ReceiveContent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerMessage_ReceiveContent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerMessage_GetData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerMessage_GetData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ServerMsg_2eproto() {
  protobuf_AddDesc_ServerMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ServerMsg.proto");
  GOOGLE_CHECK(file != NULL);
  ServerMessage_descriptor_ = file->message_type(0);
  static const int ServerMessage_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ServerMessage_default_oneof_instance_, receive_content_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ServerMessage_default_oneof_instance_, get_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage, MessageType_),
  };
  ServerMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerMessage_descriptor_,
      ServerMessage::default_instance_,
      ServerMessage_offsets_,
      -1,
      -1,
      -1,
      ServerMessage_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage, _oneof_case_[0]),
      sizeof(ServerMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage, _is_default_instance_));
  ServerMessage_ReceiveContent_descriptor_ = ServerMessage_descriptor_->nested_type(0);
  static const int ServerMessage_ReceiveContent_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, beizhu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, username_),
  };
  ServerMessage_ReceiveContent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerMessage_ReceiveContent_descriptor_,
      ServerMessage_ReceiveContent::default_instance_,
      ServerMessage_ReceiveContent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerMessage_ReceiveContent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_ReceiveContent, _is_default_instance_));
  ServerMessage_GetData_descriptor_ = ServerMessage_descriptor_->nested_type(1);
  static const int ServerMessage_GetData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_GetData, userid_),
  };
  ServerMessage_GetData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerMessage_GetData_descriptor_,
      ServerMessage_GetData::default_instance_,
      ServerMessage_GetData_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerMessage_GetData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_GetData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMessage_GetData, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ServerMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerMessage_descriptor_, &ServerMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerMessage_ReceiveContent_descriptor_, &ServerMessage_ReceiveContent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerMessage_GetData_descriptor_, &ServerMessage_GetData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ServerMsg_2eproto() {
  delete ServerMessage::default_instance_;
  delete ServerMessage_default_oneof_instance_;
  delete ServerMessage_reflection_;
  delete ServerMessage_ReceiveContent::default_instance_;
  delete ServerMessage_ReceiveContent_reflection_;
  delete ServerMessage_GetData::default_instance_;
  delete ServerMessage_GetData_reflection_;
}

void protobuf_AddDesc_ServerMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ServerMsg.proto\022\027com.liyuanguo.qq.sear"
    "ch\"\265\002\n\rServerMessage\022P\n\017receive_content\030"
    "\001 \001(\01325.com.liyuanguo.qq.search.ServerMe"
    "ssage.ReceiveContentH\000\022B\n\010get_data\030\002 \001(\013"
    "2..com.liyuanguo.qq.search.ServerMessage"
    ".GetDataH\000\032d\n\016ReceiveContent\022\016\n\006status\030\001"
    " \001(\005\022\016\n\006beizhu\030\002 \001(\t\022\020\n\010distance\030\003 \001(\002\022\016"
    "\n\006userId\030\004 \001(\t\022\020\n\010userName\030\005 \001(\t\032\031\n\007GetD"
    "ata\022\016\n\006userId\030\001 \001(\tB\r\n\013MessageTypeB\013B\tSe"
    "rverMsgb\006proto3", 375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMsg.proto", &protobuf_RegisterTypes);
  ServerMessage::default_instance_ = new ServerMessage();
  ServerMessage_default_oneof_instance_ = new ServerMessageOneofInstance();
  ServerMessage_ReceiveContent::default_instance_ = new ServerMessage_ReceiveContent();
  ServerMessage_GetData::default_instance_ = new ServerMessage_GetData();
  ServerMessage::default_instance_->InitAsDefaultInstance();
  ServerMessage_ReceiveContent::default_instance_->InitAsDefaultInstance();
  ServerMessage_GetData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ServerMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ServerMsg_2eproto {
  StaticDescriptorInitializer_ServerMsg_2eproto() {
    protobuf_AddDesc_ServerMsg_2eproto();
  }
} static_descriptor_initializer_ServerMsg_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage_ReceiveContent::kStatusFieldNumber;
const int ServerMessage_ReceiveContent::kBeizhuFieldNumber;
const int ServerMessage_ReceiveContent::kDistanceFieldNumber;
const int ServerMessage_ReceiveContent::kUserIdFieldNumber;
const int ServerMessage_ReceiveContent::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage_ReceiveContent::ServerMessage_ReceiveContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
}

void ServerMessage_ReceiveContent::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServerMessage_ReceiveContent::ServerMessage_ReceiveContent(const ServerMessage_ReceiveContent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
}

void ServerMessage_ReceiveContent::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  beizhu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerMessage_ReceiveContent::~ServerMessage_ReceiveContent() {
  // @@protoc_insertion_point(destructor:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  SharedDtor();
}

void ServerMessage_ReceiveContent::SharedDtor() {
  beizhu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServerMessage_ReceiveContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMessage_ReceiveContent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerMessage_ReceiveContent_descriptor_;
}

const ServerMessage_ReceiveContent& ServerMessage_ReceiveContent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerMsg_2eproto();
  return *default_instance_;
}

ServerMessage_ReceiveContent* ServerMessage_ReceiveContent::default_instance_ = NULL;

ServerMessage_ReceiveContent* ServerMessage_ReceiveContent::New(::google::protobuf::Arena* arena) const {
  ServerMessage_ReceiveContent* n = new ServerMessage_ReceiveContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMessage_ReceiveContent::Clear() {
// @@protoc_insertion_point(message_clear_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerMessage_ReceiveContent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerMessage_ReceiveContent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, distance_);
  beizhu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ServerMessage_ReceiveContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_beizhu;
        break;
      }

      // optional string beizhu = 2;
      case 2: {
        if (tag == 18) {
         parse_beizhu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beizhu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->beizhu().data(), this->beizhu().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_distance;
        break;
      }

      // optional float distance = 3;
      case 3: {
        if (tag == 29) {
         parse_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_userId;
        break;
      }

      // optional string userId = 4;
      case 4: {
        if (tag == 34) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userName;
        break;
      }

      // optional string userName = 5;
      case 5: {
        if (tag == 42) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  return false;
#undef DO_
}

void ServerMessage_ReceiveContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional string beizhu = 2;
  if (this->beizhu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->beizhu().data(), this->beizhu().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->beizhu(), output);
  }

  // optional float distance = 3;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance(), output);
  }

  // optional string userId = 4;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->userid(), output);
  }

  // optional string userName = 5;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
}

::google::protobuf::uint8* ServerMessage_ReceiveContent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional string beizhu = 2;
  if (this->beizhu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->beizhu().data(), this->beizhu().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->beizhu(), target);
  }

  // optional float distance = 3;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->distance(), target);
  }

  // optional string userId = 4;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->userid(), target);
  }

  // optional string userName = 5;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  return target;
}

int ServerMessage_ReceiveContent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  int total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional string beizhu = 2;
  if (this->beizhu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->beizhu());
  }

  // optional float distance = 3;
  if (this->distance() != 0) {
    total_size += 1 + 4;
  }

  // optional string userId = 4;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string userName = 5;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMessage_ReceiveContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerMessage_ReceiveContent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage_ReceiveContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
    MergeFrom(*source);
  }
}

void ServerMessage_ReceiveContent::MergeFrom(const ServerMessage_ReceiveContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.beizhu().size() > 0) {

    beizhu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.beizhu_);
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void ServerMessage_ReceiveContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_ReceiveContent::CopyFrom(const ServerMessage_ReceiveContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.liyuanguo.qq.search.ServerMessage.ReceiveContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_ReceiveContent::IsInitialized() const {

  return true;
}

void ServerMessage_ReceiveContent::Swap(ServerMessage_ReceiveContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage_ReceiveContent::InternalSwap(ServerMessage_ReceiveContent* other) {
  std::swap(status_, other->status_);
  beizhu_.Swap(&other->beizhu_);
  std::swap(distance_, other->distance_);
  userid_.Swap(&other->userid_);
  username_.Swap(&other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMessage_ReceiveContent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerMessage_ReceiveContent_descriptor_;
  metadata.reflection = ServerMessage_ReceiveContent_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage_GetData::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage_GetData::ServerMessage_GetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.liyuanguo.qq.search.ServerMessage.GetData)
}

void ServerMessage_GetData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServerMessage_GetData::ServerMessage_GetData(const ServerMessage_GetData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.liyuanguo.qq.search.ServerMessage.GetData)
}

void ServerMessage_GetData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerMessage_GetData::~ServerMessage_GetData() {
  // @@protoc_insertion_point(destructor:com.liyuanguo.qq.search.ServerMessage.GetData)
  SharedDtor();
}

void ServerMessage_GetData::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServerMessage_GetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMessage_GetData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerMessage_GetData_descriptor_;
}

const ServerMessage_GetData& ServerMessage_GetData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerMsg_2eproto();
  return *default_instance_;
}

ServerMessage_GetData* ServerMessage_GetData::default_instance_ = NULL;

ServerMessage_GetData* ServerMessage_GetData::New(::google::protobuf::Arena* arena) const {
  ServerMessage_GetData* n = new ServerMessage_GetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMessage_GetData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ServerMessage_GetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.liyuanguo.qq.search.ServerMessage.GetData.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.liyuanguo.qq.search.ServerMessage.GetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.liyuanguo.qq.search.ServerMessage.GetData)
  return false;
#undef DO_
}

void ServerMessage_GetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  // optional string userId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.GetData.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.liyuanguo.qq.search.ServerMessage.GetData)
}

::google::protobuf::uint8* ServerMessage_GetData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  // optional string userId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.liyuanguo.qq.search.ServerMessage.GetData.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.liyuanguo.qq.search.ServerMessage.GetData)
  return target;
}

int ServerMessage_GetData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  int total_size = 0;

  // optional string userId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMessage_GetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerMessage_GetData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage_GetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.liyuanguo.qq.search.ServerMessage.GetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.liyuanguo.qq.search.ServerMessage.GetData)
    MergeFrom(*source);
  }
}

void ServerMessage_GetData::MergeFrom(const ServerMessage_GetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
}

void ServerMessage_GetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_GetData::CopyFrom(const ServerMessage_GetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.liyuanguo.qq.search.ServerMessage.GetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_GetData::IsInitialized() const {

  return true;
}

void ServerMessage_GetData::Swap(ServerMessage_GetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage_GetData::InternalSwap(ServerMessage_GetData* other) {
  userid_.Swap(&other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMessage_GetData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerMessage_GetData_descriptor_;
  metadata.reflection = ServerMessage_GetData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage::kReceiveContentFieldNumber;
const int ServerMessage::kGetDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage::ServerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.liyuanguo.qq.search.ServerMessage)
}

void ServerMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ServerMessage_default_oneof_instance_->receive_content_ = const_cast< ::com::liyuanguo::qq::search::ServerMessage_ReceiveContent*>(&::com::liyuanguo::qq::search::ServerMessage_ReceiveContent::default_instance());
  ServerMessage_default_oneof_instance_->get_data_ = const_cast< ::com::liyuanguo::qq::search::ServerMessage_GetData*>(&::com::liyuanguo::qq::search::ServerMessage_GetData::default_instance());
}

ServerMessage::ServerMessage(const ServerMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.liyuanguo.qq.search.ServerMessage)
}

void ServerMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_MessageType();
}

ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:com.liyuanguo.qq.search.ServerMessage)
  SharedDtor();
}

void ServerMessage::SharedDtor() {
  if (has_MessageType()) {
    clear_MessageType();
  }
  if (this != default_instance_) {
  }
}

void ServerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerMessage_descriptor_;
}

const ServerMessage& ServerMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerMsg_2eproto();
  return *default_instance_;
}

ServerMessage* ServerMessage::default_instance_ = NULL;

ServerMessage* ServerMessage::New(::google::protobuf::Arena* arena) const {
  ServerMessage* n = new ServerMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMessage::clear_MessageType() {
// @@protoc_insertion_point(one_of_clear_start:com.liyuanguo.qq.search.ServerMessage)
  switch(MessageType_case()) {
    case kReceiveContent: {
      delete MessageType_.receive_content_;
      break;
    }
    case kGetData: {
      delete MessageType_.get_data_;
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGETYPE_NOT_SET;
}


void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.liyuanguo.qq.search.ServerMessage)
  clear_MessageType();
}

bool ServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.liyuanguo.qq.search.ServerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.liyuanguo.qq.search.ServerMessage.ReceiveContent receive_content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_receive_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_get_data;
        break;
      }

      // optional .com.liyuanguo.qq.search.ServerMessage.GetData get_data = 2;
      case 2: {
        if (tag == 18) {
         parse_get_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.liyuanguo.qq.search.ServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.liyuanguo.qq.search.ServerMessage)
  return false;
#undef DO_
}

void ServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.liyuanguo.qq.search.ServerMessage)
  // optional .com.liyuanguo.qq.search.ServerMessage.ReceiveContent receive_content = 1;
  if (has_receive_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *MessageType_.receive_content_, output);
  }

  // optional .com.liyuanguo.qq.search.ServerMessage.GetData get_data = 2;
  if (has_get_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *MessageType_.get_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:com.liyuanguo.qq.search.ServerMessage)
}

::google::protobuf::uint8* ServerMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.liyuanguo.qq.search.ServerMessage)
  // optional .com.liyuanguo.qq.search.ServerMessage.ReceiveContent receive_content = 1;
  if (has_receive_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *MessageType_.receive_content_, target);
  }

  // optional .com.liyuanguo.qq.search.ServerMessage.GetData get_data = 2;
  if (has_get_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *MessageType_.get_data_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.liyuanguo.qq.search.ServerMessage)
  return target;
}

int ServerMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:com.liyuanguo.qq.search.ServerMessage)
  int total_size = 0;

  switch (MessageType_case()) {
    // optional .com.liyuanguo.qq.search.ServerMessage.ReceiveContent receive_content = 1;
    case kReceiveContent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *MessageType_.receive_content_);
      break;
    }
    // optional .com.liyuanguo.qq.search.ServerMessage.GetData get_data = 2;
    case kGetData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *MessageType_.get_data_);
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.liyuanguo.qq.search.ServerMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServerMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.liyuanguo.qq.search.ServerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.liyuanguo.qq.search.ServerMessage)
    MergeFrom(*source);
  }
}

void ServerMessage::MergeFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.liyuanguo.qq.search.ServerMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.MessageType_case()) {
    case kReceiveContent: {
      mutable_receive_content()->::com::liyuanguo::qq::search::ServerMessage_ReceiveContent::MergeFrom(from.receive_content());
      break;
    }
    case kGetData: {
      mutable_get_data()->::com::liyuanguo::qq::search::ServerMessage_GetData::MergeFrom(from.get_data());
      break;
    }
    case MESSAGETYPE_NOT_SET: {
      break;
    }
  }
}

void ServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.liyuanguo.qq.search.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.liyuanguo.qq.search.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage::IsInitialized() const {

  return true;
}

void ServerMessage::Swap(ServerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage::InternalSwap(ServerMessage* other) {
  std::swap(MessageType_, other->MessageType_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerMessage_descriptor_;
  metadata.reflection = ServerMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerMessage_ReceiveContent

// optional int32 status = 1;
void ServerMessage_ReceiveContent::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 ServerMessage_ReceiveContent::status() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.status)
  return status_;
}
 void ServerMessage_ReceiveContent::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.status)
}

// optional string beizhu = 2;
void ServerMessage_ReceiveContent::clear_beizhu() {
  beizhu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerMessage_ReceiveContent::beizhu() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
  return beizhu_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_ReceiveContent::set_beizhu(const ::std::string& value) {
  
  beizhu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
}
 void ServerMessage_ReceiveContent::set_beizhu(const char* value) {
  
  beizhu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
}
 void ServerMessage_ReceiveContent::set_beizhu(const char* value, size_t size) {
  
  beizhu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
}
 ::std::string* ServerMessage_ReceiveContent::mutable_beizhu() {
  
  // @@protoc_insertion_point(field_mutable:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
  return beizhu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerMessage_ReceiveContent::release_beizhu() {
  // @@protoc_insertion_point(field_release:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
  
  return beizhu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_ReceiveContent::set_allocated_beizhu(::std::string* beizhu) {
  if (beizhu != NULL) {
    
  } else {
    
  }
  beizhu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), beizhu);
  // @@protoc_insertion_point(field_set_allocated:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.beizhu)
}

// optional float distance = 3;
void ServerMessage_ReceiveContent::clear_distance() {
  distance_ = 0;
}
 float ServerMessage_ReceiveContent::distance() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.distance)
  return distance_;
}
 void ServerMessage_ReceiveContent::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.distance)
}

// optional string userId = 4;
void ServerMessage_ReceiveContent::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerMessage_ReceiveContent::userid() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_ReceiveContent::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
}
 void ServerMessage_ReceiveContent::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
}
 void ServerMessage_ReceiveContent::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
}
 ::std::string* ServerMessage_ReceiveContent::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerMessage_ReceiveContent::release_userid() {
  // @@protoc_insertion_point(field_release:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_ReceiveContent::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userId)
}

// optional string userName = 5;
void ServerMessage_ReceiveContent::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerMessage_ReceiveContent::username() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_ReceiveContent::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
}
 void ServerMessage_ReceiveContent::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
}
 void ServerMessage_ReceiveContent::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
}
 ::std::string* ServerMessage_ReceiveContent::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerMessage_ReceiveContent::release_username() {
  // @@protoc_insertion_point(field_release:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_ReceiveContent::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:com.liyuanguo.qq.search.ServerMessage.ReceiveContent.userName)
}

// -------------------------------------------------------------------

// ServerMessage_GetData

// optional string userId = 1;
void ServerMessage_GetData::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerMessage_GetData::userid() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_GetData::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
}
 void ServerMessage_GetData::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
}
 void ServerMessage_GetData::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
}
 ::std::string* ServerMessage_GetData::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerMessage_GetData::release_userid() {
  // @@protoc_insertion_point(field_release:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerMessage_GetData::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:com.liyuanguo.qq.search.ServerMessage.GetData.userId)
}

// -------------------------------------------------------------------

// ServerMessage

// optional .com.liyuanguo.qq.search.ServerMessage.ReceiveContent receive_content = 1;
bool ServerMessage::has_receive_content() const {
  return MessageType_case() == kReceiveContent;
}
void ServerMessage::set_has_receive_content() {
  _oneof_case_[0] = kReceiveContent;
}
void ServerMessage::clear_receive_content() {
  if (has_receive_content()) {
    delete MessageType_.receive_content_;
    clear_has_MessageType();
  }
}
 const ::com::liyuanguo::qq::search::ServerMessage_ReceiveContent& ServerMessage::receive_content() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.receive_content)
  return has_receive_content()
      ? *MessageType_.receive_content_
      : ::com::liyuanguo::qq::search::ServerMessage_ReceiveContent::default_instance();
}
::com::liyuanguo::qq::search::ServerMessage_ReceiveContent* ServerMessage::mutable_receive_content() {
  if (!has_receive_content()) {
    clear_MessageType();
    set_has_receive_content();
    MessageType_.receive_content_ = new ::com::liyuanguo::qq::search::ServerMessage_ReceiveContent;
  }
  // @@protoc_insertion_point(field_mutable:com.liyuanguo.qq.search.ServerMessage.receive_content)
  return MessageType_.receive_content_;
}
::com::liyuanguo::qq::search::ServerMessage_ReceiveContent* ServerMessage::release_receive_content() {
  // @@protoc_insertion_point(field_release:com.liyuanguo.qq.search.ServerMessage.receive_content)
  if (has_receive_content()) {
    clear_has_MessageType();
    ::com::liyuanguo::qq::search::ServerMessage_ReceiveContent* temp = MessageType_.receive_content_;
    MessageType_.receive_content_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerMessage::set_allocated_receive_content(::com::liyuanguo::qq::search::ServerMessage_ReceiveContent* receive_content) {
  clear_MessageType();
  if (receive_content) {
    set_has_receive_content();
    MessageType_.receive_content_ = receive_content;
  }
  // @@protoc_insertion_point(field_set_allocated:com.liyuanguo.qq.search.ServerMessage.receive_content)
}

// optional .com.liyuanguo.qq.search.ServerMessage.GetData get_data = 2;
bool ServerMessage::has_get_data() const {
  return MessageType_case() == kGetData;
}
void ServerMessage::set_has_get_data() {
  _oneof_case_[0] = kGetData;
}
void ServerMessage::clear_get_data() {
  if (has_get_data()) {
    delete MessageType_.get_data_;
    clear_has_MessageType();
  }
}
 const ::com::liyuanguo::qq::search::ServerMessage_GetData& ServerMessage::get_data() const {
  // @@protoc_insertion_point(field_get:com.liyuanguo.qq.search.ServerMessage.get_data)
  return has_get_data()
      ? *MessageType_.get_data_
      : ::com::liyuanguo::qq::search::ServerMessage_GetData::default_instance();
}
::com::liyuanguo::qq::search::ServerMessage_GetData* ServerMessage::mutable_get_data() {
  if (!has_get_data()) {
    clear_MessageType();
    set_has_get_data();
    MessageType_.get_data_ = new ::com::liyuanguo::qq::search::ServerMessage_GetData;
  }
  // @@protoc_insertion_point(field_mutable:com.liyuanguo.qq.search.ServerMessage.get_data)
  return MessageType_.get_data_;
}
::com::liyuanguo::qq::search::ServerMessage_GetData* ServerMessage::release_get_data() {
  // @@protoc_insertion_point(field_release:com.liyuanguo.qq.search.ServerMessage.get_data)
  if (has_get_data()) {
    clear_has_MessageType();
    ::com::liyuanguo::qq::search::ServerMessage_GetData* temp = MessageType_.get_data_;
    MessageType_.get_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerMessage::set_allocated_get_data(::com::liyuanguo::qq::search::ServerMessage_GetData* get_data) {
  clear_MessageType();
  if (get_data) {
    set_has_get_data();
    MessageType_.get_data_ = get_data;
  }
  // @@protoc_insertion_point(field_set_allocated:com.liyuanguo.qq.search.ServerMessage.get_data)
}

bool ServerMessage::has_MessageType() const {
  return MessageType_case() != MESSAGETYPE_NOT_SET;
}
void ServerMessage::clear_has_MessageType() {
  _oneof_case_[0] = MESSAGETYPE_NOT_SET;
}
ServerMessage::MessageTypeCase ServerMessage::MessageType_case() const {
  return ServerMessage::MessageTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace search
}  // namespace qq
}  // namespace liyuanguo
}  // namespace com

// @@protoc_insertion_point(global_scope)
